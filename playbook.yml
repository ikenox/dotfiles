---
- name: dotfiles
  hosts: localhost
  connection: local
  tasks:
    - name: install packages via homebrew
      with_items: "{{ brew_packages }}"
      community.general.homebrew:
        name: "{{ item }}"
        state: present
    - name: install packages via homebrew cask
      with_items: "{{ brew_cask_packages }}"
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
    - name: generate ssh key
      command: "ssh-keygen -t rsa -b 4096"
      args:
        creates: "$HOME/.ssh/id_rsa"
    - name: clone dotfiles repository
      command: "git clone https://github.com/ikenox/dotfiles.git $HOME/repos/github.com/ikenox/dotfiles"
      args:
        creates: "$HOME/repos/github.com/ikenox/dotfiles"
    - name: symlinks
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        - { src: '$HOME/repos/github.com/ikenox/dotfiles', dest: '$HOME/.dotfiles' }
        - { src: '$HOME/.dotfiles/git/gitconfig', dest: '$HOME/.gitconfig' }
        - { src: '$HOME/.dotfiles/karabiner', dest: '$HOME/.config/karabiner' }
        - { src: '$HOME/.dotfiles/git/gitignore', dest: '$HOME/.gitignore' }
        - { src: '$HOME/.dotfiles/vim/vimrc', dest: '$HOME/.vimrc' }
        - { src: '$HOME/.dotfiles/vim/vimrc.keymap', dest: '$HOME/.vimrc.keymap' }
        - { src: '$HOME/.dotfiles/zellij/config.kdl', dest: '$HOME/.config/zellij/config.kdl' }
        - { src: '$HOME/.dotfiles/alacritty/alacritty.yml', dest: '$HOME/.config/alacritty/alacritty.yml' }
        - { src: '$HOME/.dotfiles/peco/config.json', dest: '$HOME/.config/peco/config.json' }
        - { src: '$HOME/.dotfiles/ag/agignore', dest: '$HOME/.agignore' }
        - { src: '$HOME/.dotfiles/fish', dest: '$HOME/.config/fish' }
        - { src: '$HOME/.dotfiles/intellij/ideavimrc', dest: '$HOME/.ideavimrc' }
        - { src: '$HOME/.dotfiles/vscode/settings.json', dest: '$HOME/Application\ Support/Code/User/settings.json' }
        - { src: '$HOME/.dotfiles/vscode/keybindings.json', dest: '$HOME/.Application\ Support/Code/User/keybindings.json' }
        - { src: '$HOME/.dotfiles/vscode/tasks.json', dest: '$HOME/Application\ Support/Code/User/tasks.json' }
    - name: gitconfig username
      command: "git config -f ~/.gitconfig.local user.name 'naoto.ikeno'"
    - name: gitconfig email
      command: "git config -f ~/.gitconfig.local user.email '{{ email }}'"
    - name: vim-plug
      command: "curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
      args:
        creates: "$HOME/.vim/autoload/plug.vim"
    - name: cargo
      executable:
        name: cargo
        action: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh"
    - name: zellij
      executable:
        name: zellij
        action: "cargo install --locked zellij"
    - name: clone dotfiles repository
      command: "curl -Lo ~/.config/fish/functions/fisher.fish --create-dirs git.io/fisher"
      args:
        creates: "$HOME/.config/fish/functions/fisher.fish"
    - name: add default shell
      command: "cat /etc/shells | grep $(which fish) || sudo bash -c 'echo $(which fish) >> /etc/shells'"
    - name: fish packages
      command: "cat ~/.config/fish/fishfile | xargs -I% fish -c 'fisher install %'"
    - name: osx_defaults
      with_items: "{{ osx_defaults }}"
      command: "{{ item }}"
    - name: install vscode extensions
      command: 'cat ~/.dotfiles/vscode/extensions.txt | while read line; do code --install-extension $line; done'
    - name: osx_defaults
      with_items: "{{ mas_apps }}"
      command: "mas list | grep '^{{ item }} ' || mas install {{ item }}"

  vars:
    - brew_packages:
        - git
        - ghq
        - vim
        - peco
        - fzf
        - jq
        - mas
        - gnu-sed
        - ag
        - fish
        - docker
    - brew_cask_packages:
        - karabiner-elements
        - alacritty
        - google-japanese-ime
        - hyperswitch
        - jetbrains-toolbox
        - visual-studio-code
        - google-cloud-sdk
        - slack
        - alfred
        - caffeine
        - discord
        - zoom
    - mas_apps:
        - '409183694' # keynote
        - '409203825' # Numbers
        - '409201541' # Pages
        - '539883307' # LINE
        - '485812721' # TweetDeck
        - '405399194' # Kindle
    - osx_defaults:
        - 'defaults write com.apple.dock autohide -bool true'
        - 'defaults write com.apple.dock persistent-apps -array'
        - 'defaults write com.apple.dock tilesize -int 55'
        # task 'defaults write com.apple.dock wvous-bl-corner -int 10'
        # task 'defaults write com.apple.dock wvous-bl-modifier -int 0'
        # todo killall if updated
        # killall Dock'

        - 'defaults write com.apple.finder AppleShowAllFiles YES'
        - 'defaults write com.apple.finder NewWindowTarget -string "PfDe"'
        - 'defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"'
        # todo killall if updated
        # killall Finder'

        - 'defaults write com.apple.Safari IncludeInternalDebugMenu -bool true'

        - 'defaults write com.apple.screencapture "disable-shadow" -bool yes'
        - 'defaults write com.apple.screencapture name screenshot'
        - 'defaults write com.apple.screencapture location ~/screenshots/'

        # todo needs restart
        - 'defaults write -g com.apple.trackpad.scaling -int 3'
        - 'defaults write -g InitialKeyRepeat -int 15'
        - 'defaults write -g KeyRepeat -int 2'
        - 'defaults -currentHost write -globalDomain com.apple.mouse.tapBehavior -int 1'

        - 'defaults write -g AppleShowAllExtensions -bool true'
        - 'defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true'

        # ctrl + / -> next window in the same app
        # task 'defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 27 "{ enabled = 1; value =                 { parameters = ( 121, 16, 262144); type = standard; }; }""'
        #
        # TouchBar layout
        - 'defaults write com.apple.controlstrip MiniCustomized \'( "com.apple.system.brightness", "com.apple.system.volume", "com.apple.system.mute", "com.apple.system.sleep")\''
        - 'defaults write com.microsoft.VSCode ApplePressAndHoldEnabled -bool false'
        - 'defaults write com.microsoft.VSCodeInsiders ApplePressAndHoldEnabled -bool false'
        - 'defaults write -g ApplePressAndHoldEnabled -bool false'
  vars_prompt:
    - name: email
      prompt: What is your email?
      private: false
