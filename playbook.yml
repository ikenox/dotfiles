---
- name: dotfiles
  hosts: localhost
  connection: local
  vars:
    - aliases:
        - &brew_install
          name: "install {{ package }}"
          community.general.homebrew:
            name: "{{ package }}"
            state: present
        - &symlink
          name: "symlink {{ dest }} -> {{ src }}"
          block:
            - file:
                path: "{{ dest | dirname }}"
                state: directory
            - file:
                src: "{{ src }}"
                dest: "{{ dest }}"
                state: link
  vars_prompt:
    - name: username
      prompt: What is your name?
      default: naoto.ikeno
      private: false
    - name: email
      prompt: What is your email?
      default: ikenox@gmail.com
      private: false
  tasks:
    - name: create variables file
      shell: "echo 'username: {{ username }}\nemail: {{ email }}' > $HOME/repos/github.com/ikenox/dotfiles/vars.yml"
    - <<: *symlink
      vars:
        src: "$HOME/repos/github.com/ikenox/dotfiles"
        dest: "$HOME/.dotfiles"
    - name: generate ssh key
      command: "ssh-keygen -q -C '{{ email }}' -t ed25519 -f ~/.ssh/id_ed25519 -N ''"
      args:
        creates: "$HOME/.ssh/id_ed25519"
    - name: symlinks
      vars:
        symlinks:
          - { src: "$HOME/.dotfiles/karabiner", dest: "$HOME/.config/karabiner" }
          - { src: "$HOME/.dotfiles/zellij/config.kdl", dest: "$HOME/.config/zellij/config.kdl" }
          - { src: "$HOME/.dotfiles/ghostty/config", dest: "$HOME/.config/ghostty/config" }
          - { src: "$HOME/.dotfiles/peco/config.json", dest: "$HOME/.config/peco/config.json" }
          - { src: "$HOME/.dotfiles/ag/agignore", dest: "$HOME/.agignore" }
          - { src: "$HOME/.dotfiles/intellij/ideavimrc", dest: "$HOME/.ideavimrc" }
          - { src: "$HOME/.dotfiles/jupyter/lab/user-settings", dest: "$HOME/.jupyter/lab/user-settings" }
      block:
        - with_items: "{{ symlinks }}"
          file:
            path: "{{ item.dest | dirname }}"
            state: directory
        - name: symlinks
          with_items: "{{ symlinks }}"
          file:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            state: link
    - name: brew
      block:
        - name: brew tap for im-select
          command: "brew tap daipeihust/tap"
        - name: install packages via homebrew
          vars:
            brew_packages:
              - ghq
              - peco
              - fzf
              - jq
              - mas
              - gnu-sed
              - ag
              - docker
              - zellij
              - im-select
              - expect
          with_items: "{{ brew_packages }}"
          community.general.homebrew:
            name: "{{ item }}"
            state: present
        - name: homebrew cask
          block:
            - name: install packages via homebrew cask
              community.general.homebrew_cask:
                name: "{{ item }}"
                state: present
              with_items: "{{ brew_cask_packages }}"
              ignore_errors: true
              vars:
                brew_cask_packages:
                  - karabiner-elements
                  - ghostty
                  - google-japanese-ime
                  - alt-tab
                  - jetbrains-toolbox
                  - google-cloud-sdk
                  - alfred
                  - caffeine
                  - discord
                  - docker
    - name: git
      block:
        - <<: *brew_install
          vars:
            package: git
        - <<: *symlink
          vars:
            src: "$HOME/.dotfiles/git/gitconfig"
            dest: "$HOME/.gitconfig"
        - <<: *symlink
          vars:
            src: "$HOME/.dotfiles/git/gitignore"
            dest: "$HOME/.gitignore"
        - name: gitconfig username
          command: "git config -f ~/.gitconfig.local user.name '{{ username }}'"
        - name: gitconfig email
          command: "git config -f ~/.gitconfig.local user.email '{{ email }}'"
    - name: shell
      block:
        - <<: *brew_install
          vars:
            package: zsh
        - <<: *symlink
          vars:
            src: "$HOME/.dotfiles/zsh/.zshrc"
            dest: "$HOME/.zshrc"
        - <<: *brew_install
          vars:
            package: starship
        - <<: *symlink
          vars:
            src: "$HOME/.dotfiles/starship/starship.toml"
            dest: "$HOME/.config/starship.toml"
    - name: vscode
      block:
        - name: install vscode
          community.general.homebrew_cask:
            name: visual-studio-code
            state: present
        - <<: *symlink
          vars:
            src: "$HOME/.dotfiles/vscode/settings.json"
            dest: "$HOME/Library/Application Support/Code/User/settings.json"
        - <<: *symlink
          vars:
            src: "$HOME/.dotfiles/vscode/keybindings.json"
            dest: "$HOME/Library/Application Support/Code/User/keybindings.json"
        - <<: *symlink
          vars:
            src: "$HOME/.dotfiles/vscode/tasks.json"
            dest: "$HOME/Library/Application Support/Code/User/tasks.json"
        - name: install vscode extensions
          ansible.builtin.shell: "cat ~/.dotfiles/vscode/extensions.txt | while read line; do code --install-extension $line; done"
    - name: vim
      block:
        - <<: *brew_install
          vars:
            package: vim
        - <<: *symlink
          vars:
            src: "$HOME/.dotfiles/vim/vimrc"
            dest: "$HOME/.vimrc"
        - <<: *symlink
          vars:
            src: "$HOME/.dotfiles/vim/vimrc.keymap"
            dest: "$HOME/.vimrc.keymap"
        - name: vim-plug
          command: "curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
          args:
            creates: "$HOME/.vim/autoload/plug.vim"
    - name: install cargo
      block:
        - shell: "which cargo"
          ignore_errors: true
          register: which_cargo_result
        - name: download cargo
          command: "curl -sSf https://sh.rustup.rs | sh -s -- -y"
          when: which_cargo_result.rc != 0
    - name: "osx defaults"
      with_items: "{{ commands }}"
      command: "{{ item }}"
      vars:
        commands:
          - "defaults write com.apple.dock autohide -bool true"
          - "defaults write com.apple.dock persistent-apps -array"
          - "defaults write com.apple.dock tilesize -int 55"
          - "defaults write com.apple.finder AppleShowAllFiles YES"
          - 'defaults write com.apple.finder NewWindowTarget -string "PfDe"'
          - 'defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"'
          - "defaults write com.apple.Safari IncludeInternalDebugMenu -bool true"
          - 'defaults write com.apple.screencapture "disable-shadow" -bool yes'
          - "defaults write com.apple.screencapture name screenshot"
          - "defaults write com.apple.screencapture location ~/screenshots/"
          - "defaults write -g com.apple.trackpad.scaling -int 3"
          - "defaults write -g InitialKeyRepeat -int 15"
          - "defaults write -g KeyRepeat -int 2"
          - "defaults -currentHost write -globalDomain com.apple.mouse.tapBehavior -int 1"
          - "defaults write -g AppleShowAllExtensions -bool true"
          - "defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true"
          - 'defaults write com.apple.controlstrip MiniCustomized ''( "com.apple.system.brightness", "com.apple.system.volume", "com.apple.system.mute", "com.apple.system.sleep")'''
          - "defaults write com.microsoft.VSCode ApplePressAndHoldEnabled -bool false"
          - "defaults write com.microsoft.VSCodeInsiders ApplePressAndHoldEnabled -bool false"
          - "defaults write -g ApplePressAndHoldEnabled -bool false"
          - "defaults write com.lwouis.alt-tab-macos windowDisplayDelay 100"
          - "defaults write com.apple.inputmethod.Kotoeri JIMPrefCharacterForYenKey 1" # ことえり > ￥キーで入力する文字: \
          - "defaults write -g NSAutomaticSpellingCorrectionEnabled 1" # 環境設定 > キーボード > ユーザ辞書 > 英字入力中にスペルを自動変換
          - "defaults write -g AppleInterfaceStyle -string \"Dark\"" # Dark mode
    - name: mas apps
      vars:
        mas_apps:
          - "409183694" # keynote
          - "409203825" # Numbers
          - "409201541" # Pages
          - "539883307" # LINE
      with_items: "{{ mas_apps }}"
      ansible.builtin.shell: "mas list | grep '^{{ item }} ' || mas install {{ item }}"
